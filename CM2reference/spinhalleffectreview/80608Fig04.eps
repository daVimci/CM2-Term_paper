%!PS-Adobe-3.0 EPSF-3.0
%%Title: Microsoft PowerPoint - domain.ppt
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 11/9/2007 22:34:15
%%For: Xiaoliang Qi
%%BoundingBox: 36 440 707 726
%%Pages: 1
%%Orientation: Landscape
%%PageOrder: Ascend
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (HP LaserJet 4000 Series) (2014.108) 1
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 36 440 707 726
%%ViewingOrientation: 0 1 -1 0
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman[/STSong-Light--GBK-EUC-H
dup{findfont}stopped{cleartomark}{/FontName get eq{pop cleartomark[
<b8c3cec4bcfed0e8d2aad3c3b5c4c4dab4e6ccabb6e0a1a3c4fabfc9d2d4cad4d3c3c8e7cfc2b5
c4b7bdb7a8d4d9b4f2d3a1a3ba>100 500<d4daa1b0506f7374536372697074a1b1b6d4bbb0bf
f2a3acd1a1d4f1a1b0506f7374536372697074a3a8b6d4b1e3d0afcabd41445343b5c4d3c5bbafa
3a9a1b1a1a3>115 485<d4daa1b0c9e8b1b8d1a1cfeea1b1b6d4bbb0bff2a3aca1b0bfc9d3c3b
4f2d3a1bbfac4dab4e6a1b1b5c4d6b5cac7beabc8b7b5c4a1a3>115 470<d4dacec4bcfed6d0c
9d9d3c3bcb8d6d6d7d6cce5a1a3>115 455<b5a5b6c0b4f2d3a1b8c3cec4bcfeb5c4b2bbcdacb
2bfb7d6bbf2d2b3a1a3>115 440 10 0/STSong-Light--GBK-EUC-H}{cleartomark}ifelse}
ifelse showpage(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}
bind def end version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get
def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
[ 0 1 -1 0 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 12.99968 779.0003 ] def 
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 13 13 779 599
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_WinNT_Compat 5.0 0
userdict/Pscript_WinNT_Compat 19 dict dup begin/bd{bind def}bind def/ld{load
def}bd/$x matrix def/ANSIVec[16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde
16#4/macron 16#5/breve 16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A
/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60
/grave 16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand 16#8A
/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash 16#98
/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe 16#9F
/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency 16#A5/yen 16#A6
/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB
/guillemotleft 16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron
16#B0/degree 16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute
16#B5/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf 16#BE
/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE
/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute
16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE
/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3
/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9
/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE
/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute
16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9
/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn
16#FF/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{pop
pop}ifelse}forall/initialize{currentdict exch begin begin}bind def/terminate{
/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate load def
/resume/initialize load def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}def/SS{/pagesave save def}def/CB{pop pop pop pop}def
/B{pop pop pop pop}def/:/gsave load def/;/grestore load def/N/newpath load def
end put
%%EndResource
end reinitialize
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
NP 192 192 m 6192 192 l 6192 4692 l 192 4692 l CP 
eoclip
1 1 1 SC
NP 192 192 m 6192 192 l 6192 4692 l 192 4692 l CP 
eofill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 783 2391 m 3000 2391 l 3000 2399 l 783 2399 l CP 
3000 2395 m 2967 2353 l 3050 2395 l 2967 2437 l CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 785 2395 m 785 1074 l 793 1074 l 793 2395 l CP 
789 1074 m 747 1108 l 789 1024 l 831 1108 l CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 1 SC
NP 786 1665 m 812 1643 l 825 1632 l 840 1622 l 855 1613 l 872 1605 l 880 1601 l 889 1598 l 899 1594 l 909 1592 l 920 1589 l 931 1588 l 942 1586 l 954 1585 l 967 1585 l 980 1585 l 994 1585 l 1008 1586 l 1024 1588 l 1039 1590 l 1056 1593 l 1073 1596 l 1092 1600 l 1111 1605 l 1131 1611 l 1152 1617 l 1162 1621 l 1174 1625 l 1185 1629 l 1197 1634 l 1209 1639 l 1222 1645 l 1248 1658 l 1276 1672 l 1304 1687 l 1334 1703 l 1364 1720 l 1395 1738 l 1427 1757 l 1460 1776 l 1493 1796 l 1527 1816 l 1561 1836 l 1631 1877 l 1665 1897 l 1700 1917 l 1735 1936 l 1770 1955 l 1804 1973 l 1838 1990 l 1872 2007 l 1905 2022 l 1938 2036 l 1970 2048 l 1985 2054 l 2001 2060 l 2016 2065 l 2031 2069 l 2046 2073 l 2060 2077 l 2075 2080 l 2088 2083 l 2102 2085 l 2115 2087 l 2128 2088 l 2141 2089 l 2154 2089 l 2166 2089 l 2179 2088 l 2191 2087 l 2203 2085 l 2215 2083 l 2227 2080 l 2240 2077 l 2252 2074 l 2263 2070 l 2287 2061 l 2311 2051 l 2334 2039 l 2357 2027 l 2379 2013 l 2401 1999 l 2423 1983 l 2444 1967 l 2466 1951 l 2486 1934 l 2507 1916 l 2527 1898 l 2546 1880 l 2565 1862 l 2584 1844 l 2602 1826 l 2620 1808 l 2637 1791 l 2654 1774 l 2671 1758 l 2686 1742 l 2702 1727 l 2717 1714 l 2731 1701 l 2745 1689 l 2771 1670 l 2776 1676 l 2750 1696 l 2736 1707 l 2722 1720 l 2708 1733 l 2692 1748 l 2676 1764 l 2660 1780 l 2643 1797 l 2626 1814 l 2608 1832 l 2590 1850 l 2571 1868 l 2552 1886 l 2532 1904 l 2512 1922 l 2492 1940 l 2471 1957 l 2449 1974 l 2428 1990 l 2406 2006 l 2383 2021 l 2361 2034 l 2337 2047 l 2314 2059 l 2290 2069 l 2266 2078 l 2254 2082 l 2242 2085 l 2229 2088 l 2217 2091 l 2204 2093 l 2192 2095 l 2179 2096 l 2166 2097 l 2154 2097 l 2141 2097 l 2128 2096 l 2114 2095 l 2101 2093 l 2087 2091 l 2073 2088 l 2058 2085 l 2044 2081 l 2029 2077 l 2013 2072 l 1998 2067 l 1983 2062 l 1967 2056 l 1935 2043 l 1902 2029 l 1868 2014 l 1835 1998 l 1800 1980 l 1766 1962 l 1731 1943 l 1696 1924 l 1661 1904 l 1626 1884 l 1557 1843 l 1523 1823 l 1489 1803 l 1456 1783 l 1423 1764 l 1391 1745 l 1360 1727 l 1330 1710 l 1300 1694 l 1272 1679 l 1245 1665 l 1219 1653 l 1206 1647 l 1194 1642 l 1182 1637 l 1171 1633 l 1160 1629 l 1149 1625 l 1128 1619 l 1109 1613 l 1090 1609 l 1072 1604 l 1055 1601 l 1038 1598 l 1023 1596 l 1008 1594 l 994 1593 l 980 1593 l 967 1593 l 955 1593 l 943 1594 l 932 1596 l 921 1598 l 911 1600 l 902 1602 l 892 1605 l 884 1609 l 875 1612 l 859 1620 l 844 1629 l 831 1639 l 817 1649 l 792 1671 l CP 
805 1687 m 795 1696 779 1695 770 1684 c 761 1674 762 1658 773 1649 c 783 1640 799 1641 808 1652 c 817 1662 816 1678 805 1687 c CP 
2758 1653 m 2770 1645 2785 1647 2793 1658 c 2802 1669 2799 1685 2788 1693 c 2777 1701 2761 1699 2753 1688 c 2745 1677 2747 1661 2758 1653 c CP 
fill
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
1 0 0 SC
NP 2779 1673 m 2719 1665 2644 1546 2418 1615 c 2192 1684 1693 2077 1423 2087 c 1152 2096 926 1757 795 1670 c stroke
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[33.3333 25] 0 setdash
0 0 0 SC
NP 789 1827 m 2915 1827 l stroke
GSE
GpPBeg1
0 0 0 SC
NP 1780 1935 m 1767 1935 1757 1945 1757 1958 c 1757 1971 1767 1982 1780 1982 c 1793 1982 1803 1971 1803 1958 c 1803 1945 1793 1935 1780 1935 c CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1780 1935 m 1767 1935 1757 1945 1757 1958 c 1757 1971 1767 1982 1780 1982 c 1793 1982 1803 1971 1803 1958 c 1803 1945 1793 1935 1780 1935 c CP 
stroke
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 3381 2391 m 5598 2391 l 5598 2399 l 3381 2399 l CP 
5598 2395 m 5565 2353 l 5648 2395 l 5565 2437 l CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 3383 2395 m 3383 1074 l 3391 1074 l 3391 2395 l CP 
3387 1074 m 3345 1108 l 3387 1024 l 3428 1108 l CP 
fill
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[33.3333 25] 0 setdash
0 0 0 SC
NP 3393 1827 m 5519 1827 l stroke
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
1 0 0 SC
NP 3393 1351 m 3489 1356 l 3537 1359 l 3585 1362 l 3633 1366 l 3681 1370 l 3729 1376 l 3776 1382 l 3824 1390 l 3848 1395 l 3871 1400 l 3895 1405 l 3918 1410 l 3942 1416 l 3965 1423 l 3989 1430 l 4012 1437 l 4036 1445 l 4059 1454 l 4082 1463 l 4105 1472 l 4128 1483 l 4151 1493 l 4174 1505 l 4197 1518 l 4220 1532 l 4243 1547 l 4266 1562 l 4289 1579 l 4313 1596 l 4336 1614 l 4359 1633 l 4382 1652 l 4405 1672 l 4428 1692 l 4473 1733 l 4519 1774 l 4563 1816 l 4608 1857 l 4630 1877 l 4652 1897 l 4674 1917 l 4695 1936 l 4717 1954 l 4738 1972 l 4759 1989 l 4780 2005 l 4800 2020 l 4821 2035 l 4841 2048 l 4861 2060 l 4881 2072 l 4901 2083 l 4921 2093 l 4942 2103 l 4963 2113 l 4983 2122 l 5004 2130 l 5025 2138 l 5046 2146 l 5067 2153 l 5087 2160 l 5108 2167 l 5148 2179 l 5187 2190 l 5206 2195 l 5225 2200 l 5243 2205 l 5261 2209 l 5279 2213 l 5296 2217 l 5312 2221 l 5328 2224 l 5343 2228 l 5357 2231 l 5371 2234 l 5383 2237 l 5395 2240 l 5427 2249 l 5424 2257 l 5393 2249 l 5381 2246 l 5369 2242 l 5355 2239 l 5341 2236 l 5326 2232 l 5310 2229 l 5294 2225 l 5277 2221 l 5259 2217 l 5241 2213 l 5223 2208 l 5204 2203 l 5185 2198 l 5146 2187 l 5105 2175 l 5085 2168 l 5064 2161 l 5043 2154 l 5022 2146 l 5001 2138 l 4980 2129 l 4959 2120 l 4938 2111 l 4918 2101 l 4897 2090 l 4877 2079 l 4856 2067 l 4836 2055 l 4816 2041 l 4795 2027 l 4775 2011 l 4754 1995 l 4732 1978 l 4711 1960 l 4690 1942 l 4668 1923 l 4646 1903 l 4624 1883 l 4602 1863 l 4558 1822 l 4513 1780 l 4468 1739 l 4422 1698 l 4399 1678 l 4376 1659 l 4353 1640 l 4331 1621 l 4308 1603 l 4285 1586 l 4262 1569 l 4239 1554 l 4216 1539 l 4193 1525 l 4170 1513 l 4148 1501 l 4125 1490 l 4102 1480 l 4079 1471 l 4056 1462 l 4033 1453 l 4010 1445 l 3986 1438 l 3963 1431 l 3940 1425 l 3916 1419 l 3893 1413 l 3870 1408 l 3846 1403 l 3823 1399 l 3775 1391 l 3728 1384 l 3680 1378 l 3633 1374 l 3585 1370 l 3537 1367 l 3489 1364 l 3393 1360 l CP 
3392 1381 m 3378 1380 3367 1368 3368 1354 c 3369 1341 3380 1330 3394 1331 c 3408 1331 3419 1343 3418 1357 c 3417 1371 3406 1381 3392 1381 c CP 
5432 2229 m 5446 2233 5453 2247 5449 2261 c 5445 2274 5431 2281 5418 2277 c 5405 2274 5397 2260 5401 2246 c 5405 2233 5419 2226 5432 2229 c CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 1 SC
NP 5413 1360 m 5318 1364 l 5270 1367 l 5222 1370 l 5175 1374 l 5127 1378 l 5080 1384 l 5033 1391 l 4986 1399 l 4963 1403 l 4939 1408 l 4916 1413 l 4893 1419 l 4869 1425 l 4846 1431 l 4823 1438 l 4800 1445 l 4777 1453 l 4754 1462 l 4731 1471 l 4708 1480 l 4686 1490 l 4663 1501 l 4640 1513 l 4618 1525 l 4595 1539 l 4572 1554 l 4550 1569 l 4527 1586 l 4504 1603 l 4481 1621 l 4458 1640 l 4436 1659 l 4413 1678 l 4390 1698 l 4345 1739 l 4300 1780 l 4255 1822 l 4211 1863 l 4189 1883 l 4167 1903 l 4146 1923 l 4124 1942 l 4103 1960 l 4082 1978 l 4061 1995 l 4040 2011 l 4019 2027 l 3999 2041 l 3978 2055 l 3958 2067 l 3938 2079 l 3918 2090 l 3898 2101 l 3877 2111 l 3856 2120 l 3836 2129 l 3815 2138 l 3794 2146 l 3773 2154 l 3752 2161 l 3732 2168 l 3711 2175 l 3671 2187 l 3632 2198 l 3613 2203 l 3594 2208 l 3576 2213 l 3558 2217 l 3541 2221 l 3524 2225 l 3508 2229 l 3492 2232 l 3477 2236 l 3463 2239 l 3449 2242 l 3437 2246 l 3425 2249 l 3394 2257 l 3392 2249 l 3423 2240 l 3435 2237 l 3447 2234 l 3461 2231 l 3475 2228 l 3490 2224 l 3506 2221 l 3522 2217 l 3539 2213 l 3556 2209 l 3574 2205 l 3592 2200 l 3611 2195 l 3630 2190 l 3669 2179 l 3709 2167 l 3729 2160 l 3750 2153 l 3770 2146 l 3791 2138 l 3812 2130 l 3832 2122 l 3853 2113 l 3873 2103 l 3894 2093 l 3914 2083 l 3934 2072 l 3954 2060 l 3974 2048 l 3994 2035 l 4014 2020 l 4035 2005 l 4055 1989 l 4076 1972 l 4097 1954 l 4119 1936 l 4140 1917 l 4162 1897 l 4183 1877 l 4205 1857 l 4250 1816 l 4294 1774 l 4339 1733 l 4385 1692 l 4407 1672 l 4430 1652 l 4453 1633 l 4476 1614 l 4499 1596 l 4522 1579 l 4545 1562 l 4568 1547 l 4591 1532 l 4614 1518 l 4637 1505 l 4659 1493 l 4682 1483 l 4705 1472 l 4728 1463 l 4751 1454 l 4774 1445 l 4797 1437 l 4821 1430 l 4844 1423 l 4867 1416 l 4891 1410 l 4914 1405 l 4938 1400 l 4961 1395 l 4985 1390 l 5032 1382 l 5079 1376 l 5127 1370 l 5174 1366 l 5222 1362 l 5269 1359 l 5317 1356 l 5413 1351 l CP 
5412 1331 m 5425 1330 5437 1341 5438 1354 c 5438 1368 5428 1380 5414 1381 c 5400 1381 5389 1371 5388 1357 c 5387 1343 5398 1331 5412 1331 c CP 
3400 2277 m 3387 2281 3373 2274 3369 2261 c 3365 2247 3373 2233 3386 2230 c 3399 2226 3413 2233 3417 2246 c 3421 2260 3413 2273 3400 2277 c CP 
fill
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[33.3333 25] 0 setdash
1 0 0 SC
NP 3387 2253 m 3643 2242 3899 2229 4143 2112 c 4387 1994 4640 1671 4852 1545 c 5065 1419 5324 1387 5419 1356 c stroke
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[33.3333 25] 0 setdash
0 0 1 SC
NP 5407 2253 m 5152 2242 4897 2229 4655 2112 c 4413 1994 4161 1671 3950 1545 c 3739 1419 3481 1387 3387 1356 c stroke
GSE
GpPBeg1
0 0 0 SC
NP 4406 1658 m 4393 1658 4383 1668 4383 1681 c 4383 1694 4393 1704 4406 1704 c 4419 1704 4429 1694 4429 1681 c 4429 1668 4419 1658 4406 1658 c CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 4406 1658 m 4393 1658 4383 1668 4383 1681 c 4383 1694 4393 1704 4406 1704 c 4419 1704 4429 1694 4429 1681 c 4429 1668 4419 1658 4406 1658 c CP 
stroke
GSE
GpPBeg1
0 0 0 SC
NP 4403 1910 m 4390 1910 4379 1920 4379 1933 c 4379 1946 4390 1957 4403 1957 c 4416 1957 4426 1946 4426 1933 c 4426 1920 4416 1910 4403 1910 c CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 4403 1910 m 4390 1910 4379 1920 4379 1933 c 4379 1946 4390 1957 4403 1957 c 4416 1957 4426 1946 4426 1933 c 4426 1920 4416 1910 4403 1910 c CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Helvetica
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
/Helvetica FontHasEuro not
{
/Euro.Helvetica
 [556 0 24 -19 541 703 ] 
<A3F8C00DD4E90378DA01F779D301F808D301F904DA01F899F908156CB447AD338B08FB2D
8B372B7BFB37085806724305D30644075B06724305DA06A0FB36E035F7218B08E08BCDB7
939208EE077A71405E418B083F8B4CCE84F108F76506A3D305FB8306D207F79C06A3D305
FBB10692E2B7E8F28B08E08BBE62A45A08090E>
AddEuroGlyph
/Euro /Helvetica /Helvetica-Copy BuildNewFont
} if
F /F0 0 /256 T /Helvetica mF 
/F0SC8 F0 [200 0 0 -200 0 0 ] mFS
F0SC8 Ji 
550 1154 M (E)S 
3149 1156 M (E)S 
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1791 2395 m 1791 2347 l stroke
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2767 2395 m 2767 2347 l stroke
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 4412 2395 m 4412 2347 l stroke
GSE
GpPBeg1
0 setlinecap
1 setlinejoin
10 setmiterlimit
8.3333 setlinewidth
[] 0 setdash
0 0 0 SC
NP 5441 2395 m 5441 2347 l stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 4371 2602 M (0)S 

%%IncludeResource: font Symbol
F /F1 0 /2 F /Symbol mF 
/F1SC8 F1 [200 0 0 -200 0 0 ] mFS
F1SC8 Ji 
3318 2566 M (-)S 
3428 2566 M (p)S 
5390 2574 M (p)S 
/F0SE9 F0 [233 0 0 -233 0 0 ] mFS
F0SE9 Ji 
403 810 M (\(a\))[78 130  0]xS 
3001 810 M (\(b\))[78 130  0]xS 
F1SC8 Ji 
579 1866 M (e)S 
/F0S85 F0 [133 0 0 -133 0 0 ] mFS
F0S85 Ji 
667 1916 M (F)S 
F1SC8 Ji 
3186 1866 M (e)S 
F0S85 Ji 
3274 1916 M (F)S 
F0SC8 Ji 
1725 2602 M (0)S 
F1SC8 Ji 
672 2566 M (-)S 
782 2566 M (p)S 
2736 2569 M (p)S 
LH
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%+ font Helvetica
%%+ font Symbol
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_WinNT_Compat 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
